                                Анаграммы.
    Предположим, требуется составить полный список анаграмм заданного слова, то есть всех возможных
перестановок букв (независимо от того, являются они допустимыми словами или нет). Например, для
слова cat программа должна вывести следующий список анаграмм:
cat
cta
atc
act
tca
tac
    Количество вариантов равно факториалу количества букв.
    Как написать программу для построения списка анаграмм слова? Один из возможных способов для
слова из n букв:
1. Построить анаграммы для правых n–1 букв.
2. Выполнить циклический сдвиг всех n букв.
3. Повторить эти действия n раз.
    При циклическом сдвиге все буквы сдвигаются на одну позицию влево — кроме крайней левой буквы,
которая перемещается в конец слова.
    Если выполнить циклический сдвиг слова n раз, каждая из букв слова побывает первой. Пока вы-
бранная буква занимает первую позицию, для всех остальных букв строится список анаграмм (то есть
буквы переставляются во всех возможных сочетаниях). Слово cat состоит всего из трех букв, поэтому
циклический сдвиг двух последних букв просто меняет их местами.

Пример.
    Метод main() запрашивает слово у пользователя, сохраняет его в символьном массиве для удобства
работы, после чего вызывает метод doAnagram().
    Метод rotate() осуществляет циклический сдвиг на одну позицию влево так, как было описано ранее.
Метод displayWord() выводит все слово и добавляет счетчик, чтобы пользователю стало понятно, сколько
слов было выведено. Пример работы программы:

Enter a word: cats
  1 cats    2 cast    3 ctsa    4 ctas    5 csat    6 csta
  7 atsc    8 atcs    9 asct   10 astc   11 acts   12 acst
 13 tsca   14 tsac   15 tcas   16 tcsa   17 tasc   18 tacs
 19 scat   20 scta   21 satc   22 sact   23 stca   24 stac
